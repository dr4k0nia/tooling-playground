// See https://aka.ms/new-console-template for more information
using System.Text;
using System.Text.RegularExpressions;


if (!File.Exists(args[0]))
    throw new FileNotFoundException(args[0]);

	var builder = new StringBuilder();
	builder.Append(@"\(");
	builder.Append('"');
	builder.Append(@"\{[\w\d,");
	builder.Append('"');
	builder.Append(@"'{}\-\.\s]*'\)");
	
	string formatStringRegex = builder.ToString();
	
	Console.WriteLine($"Using search pattern {formatStringRegex}");
	
	var input = File.ReadAllText(args[0]);
	
	while (Regex.Match(input, formatStringRegex).Success)
    {
		var match = Regex.Match(input, formatStringRegex);
		
		var result = solveString(match.Groups[0].Value);
		
		input = input.Replace(match.Groups[0].Value, result);
		
		Console.WriteLine(result);
	}
	
	File.WriteAllText(args[0].Insert(args[0].Length - 4, "_cleaned"), input);

static string solveString(string input)
{
	input = input.ToLower();
	
	string[] data = input.Split("-f");
	
	data[0] = data[0].Trim();
	data[1] = data[1].Trim();

	string formatterRegex = "\"[0-9{}]{3,}\"";
	
	string formatter = Regex.Match(data[0], formatterRegex).Groups[0].Value;
	
	string argumentsString = data[1].Replace(")", null);

	List<object> arguments = new List<object>();
	
	foreach(var argument in ConvertStringToArray(argumentsString))
		arguments.Add((object)argument);
	
	var result = string.Format(formatter, arguments.ToArray());

	return result.Trim();
}

// Generated by ChatGPT
static string[] ConvertStringToArray(string input)
{
    string pattern = @"'([^']|'')*'";
    Regex regex = new Regex(pattern);

    MatchCollection matches = regex.Matches(input);

    string[] items = new string[matches.Count];
    for (int i = 0; i < matches.Count; i++)
    {
        string item = matches[i].Value;
        item = item.Substring(1, item.Length - 2); // remove single quotes
        item = item.Replace("''", "'"); // unescape single quotes
        items[i] = item;
    }
    return items;
}